(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const n of a)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function e(a){const n={};return a.integrity&&(n.integrity=a.integrity),a.referrerPolicy&&(n.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?n.credentials="include":a.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(a){if(a.ep)return;a.ep=!0;const n=e(a);fetch(a.href,n)}})();var $=Object.defineProperty,W=(h,t,e)=>t in h?$(h,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[t]=e,u=(h,t,e)=>W(h,typeof t!="symbol"?t+"":t,e);(function(){const h=document.createElement("link").relList;if(h&&h.supports&&h.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();class v{static blue(t){return`\x1B[34m${t}\x1B[0m`}static green(t){return`\x1B[32m${t}\x1B[0m`}static color(t,e){return`\x1B[${e}m${t}\x1B[0m`}static clearScreen(){const t=document.getElementById("console");t&&(t.innerHTML="")}static prnt(t,e=""){const s=document.getElementById("console");if(s){const a=document.createElement("span");a.textContent=t,e&&(a.style.cssText=e),s.appendChild(a),s.scrollTop=s.scrollHeight}}static warn(t){this.prnt(t,"color: orange;")}static testPrint(){this.prnt("Hello, World!"),this.prnt("Error: Something went wrong!","color: red;"),this.prnt("Info: This is some information.","color: #00ff00;"),this.prnt("Warning: Be careful!","color: orange;")}}const k=class R{static prnt(t,e="color: black;"){v.prnt(t,e)}static str(t,e){const s=t.toString();if(s.length>=e)return s;const a=e-s.length;return s+R.emptyString.substring(0,a)}static sum(t){return!t||(t=t.filter(e=>e!==0),t.length===0)?0:t.reduce((e,s)=>e+s,0)}static toString(t){return`[${Array.from(t).map(String).join(", ")}]`}static px(){return(t,e)=>t}static equalArrays(t,e){if(t.length!==e.length)return!1;for(let s=0;s<t.length;s++)if(t[s]!==e[s])return!1;return!0}static shuffleArray(t){return t.sort(()=>Math.random()-.5)}static _sleep(t){return new Promise(e=>setTimeout(e,t))}static async sleep(t){await this._sleep(t)}};u(k,"emptyString","                                           ");let c=k;var o=(h=>(h.L="L",h.R="R",h.U="U",h.D="D",h))(o||{});class M{constructor(t,e){this.key=t,this.value=e}getKey(){return this.key}getValue(){return this.value}static P(t,e){return new M(t,e)}}class g{static makeMove(t,e){const s=t.indexOf(-1),a=this.getXY(s);let n=a.getKey(),r=a.getValue();e===o.L&&(n-=1),e===o.R&&(n+=1),e===o.U&&(r-=1),e===o.D&&(r+=1);const l=this.getIndex(n,r),d=[...t],p=d[l];return d[s]=p,d[l]=-1,d}static getXY(t){const e=t%4,s=Math.floor(t/4);return M.P(e,s)}static getIndex(t,e){return e*4+t}static _getValidMoves(t){const e=this.getXY(t),s=Object.values(o).slice();return e.getKey()===0&&s.splice(s.indexOf(o.L),1),e.getKey()===3&&s.splice(s.indexOf(o.R),1),e.getValue()===0&&s.splice(s.indexOf(o.U),1),e.getValue()===3&&s.splice(s.indexOf(o.D),1),s}static getValidMoves(t,e){const s=this._getValidMoves(t),a=this.getXY(t);return this.contains(e,a.getKey()-1,a.getValue())&&s.splice(s.indexOf(o.L),1),this.contains(e,a.getKey()+1,a.getValue())&&s.splice(s.indexOf(o.R),1),this.contains(e,a.getKey(),a.getValue()-1)&&s.splice(s.indexOf(o.U),1),this.contains(e,a.getKey(),a.getValue()+1)&&s.splice(s.indexOf(o.D),1),s}static contains(t,e,s){return t.includes(this.getIndex(e,s))}static stateAsString(t,e){return Array.from({length:16},(s,a)=>{let n;const r=t[a];return r===-1?n=v.blue("*"):e.includes(r)?n=v.color(r.toString(),100):e.includes(a+1)?n=v.green(r.toString()):n=r.toString(),n+="	",a!==0&&(a+1)%4===0&&(n+=`
`),n}).join("")}static getReverseAction(t){return t===o.D?o.U:t===o.U?o.D:t===o.L?o.R:t===o.R?o.L:null}}class w{static main(){const t=b.generateLessons()[0];let e=[...t.getState()];const s=[...t.getGoals()];w.prntState(e,s),e=w.shuffle(e,t.getLockedStateElements(),1e3),w.prntState(e,s)}static shuffle(t,e,s){const a=e.map(r=>r-1);let n=0;for(;n<s;)t=w.makeRandomMove(t,a),n++;return t}static prntState(t,e){c.prnt(g.stateAsString(t,e))}static makeRandomMove(t,e){const s=t.indexOf(-1),a=g.getValidMoves(s,e),n=c.shuffleArray(a)[0];return t=g.makeMove(t,n),t}}const q=class i{constructor(t){u(this,"goals"),u(this,"lockedStateElements"),u(this,"state"),u(this,"episodesToTrain"),u(this,"lessonNb"),this.lessonNb=t,this.goals=[],this.lockedStateElements=[],this.state=[],this.episodesToTrain=0}getState(){return this.state}getGoals(){return this.goals}getLockedStateElements(){return this.lockedStateElements}getEpisodesToTrain(){return this.episodesToTrain}static generateLessons0(){return[i.state1(0),i.moveHole(i.stateX(2,1),[1,4]),i.moveHole(i.stateX(3,2),[2,5]),i.moveHole(i.state3_4(3),[3,6]),i.moveHole(i.stateX(5,4),[6,7]),i.moveHole(i.stateX(6,5),[5,8]),i.moveHole(i.stateX(7,6),[6,9]),i.moveHole(i.state7_8(7),[8,11]),i.moveHole(i.state9_13(8),[10,11]),i.moveHole(i.state10_15(9),[9,13]),i.state12(10)]}static generateLessonsV1(){return[i.state1_2(0),i.moveHole(i.state3_4(1),[2,3,4]),i.moveHole(i.stateX(5,2),[6,7]),i.moveHole(i.stateX(6,3),[5,8]),i.moveHole(i.stateX(7,4),[6,9]),i.moveHole(i.state7_8(5),[8,11]),i.moveHole(i.state9_13(6),[10,11]),i.moveHole(i.state10_15(7),[9,13]),i.state12(8)]}static generateLessons(){return[i.state1_2(0),i.moveHole(i.state3_4(1),[2,3,4]),i.moveHole(i.state5_6(2),[6,7]),i.moveHole(i.state7_8(3),[8,9,6]),i.moveHole(i.state9_13(4),[10,11]),i.moveHole(i.state10_15(5),[9,13]),i.state12(6)]}static state1_2(t){const e=new i(t);return e.goals=[1,2],e.lockedStateElements=[],e.state=[...i.stateDone],e.episodesToTrain=100,i.shuffle(e,e.lockedStateElements),e}static state1(t){return i.stateX(1,t)}static state3_4(t){const e=new i(t);return e.goals=[3,4],e.lockedStateElements=[1,2],e.state=[...i.stateDone],e.episodesToTrain=100,i.shuffle(e,[1,2,3]),e}static state5_6(t){const e=new i(t);return e.goals=[5,6],e.lockedStateElements=[1,2,3,4],e.state=[...i.stateDone],e.episodesToTrain=100,i.shuffle(e,e.lockedStateElements),e}static stateX(t,e){const s=new i(e);return s.goals=[t],s.lockedStateElements=Array.from({length:t-1},(a,n)=>n+1),s.state=[...i.stateDone],s.episodesToTrain=100,i.shuffle(s,s.lockedStateElements),s}static moveHole(t,e){const s=c.shuffleArray(e)[0],a=t.state.indexOf(-1),n=t.state[s];return t.state[s]=-1,t.state[a]=n,t}static state7_8(t){const e=new i(t);return e.goals=[7,8],e.lockedStateElements=[1,2,3,4,5,6],e.state=[...i.stateDone],e.episodesToTrain=100,i.shuffle(e,[1,2,3,4,5,6,7]),e}static state9_13(t){const e=new i(t);return e.goals=[9,13],e.lockedStateElements=[1,2,3,4,5,6,7,8],e.state=[...i.stateDone],e.episodesToTrain=100,i.shuffle(e,e.lockedStateElements),e}static state10_15(t){const e=new i(t);return e.goals=[10,11,14,15],e.lockedStateElements=[1,2,3,4,5,6,7,8,9,13],e.state=w.shuffle([...i.stateDone],e.lockedStateElements,500),e.episodesToTrain=100,e}static state12(t){const e=new i(t);return e.goals=[12],e.lockedStateElements=[1,2,3,4,5,6,7,8,9,10,11,13,14,15],e.state=w.shuffle([...i.stateDone],e.lockedStateElements,500),e.episodesToTrain=10,e}isLockedIndex(t){return this.lockedStateElements.includes(t+1)}shuffleState(){this.state=w.shuffle(this.state,this.lockedStateElements,500)}static shuffle(t,e){let s=t.state.filter(a=>!e.includes(a));s=c.shuffleArray(s),t.state=[...e,...s]}resetState(){const t=i.generateLessons()[this.lessonNb];this.goals=[...t.goals],this.lockedStateElements=[...t.lockedStateElements],this.state=[...t.state]}};u(q,"stateDone",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,-1]);let b=q;class A{constructor(t,e){u(this,"state"),u(this,"goals"),u(this,"fixedElements"),t instanceof A?(this.state=[...t.getState()],this.goals=[...t.getGoals()],this.fixedElements=[...t.getFixedElements()]):(this.state=[...t],this.goals=[...(e==null?void 0:e.getGoals())??[]],this.fixedElements=[...(e==null?void 0:e.getLockedStateElements())??[]])}getState(){return this.state}setState(t){this.state=t}getGoals(){return this.goals}setGoals(t){this.goals=t}getFixedElements(){return this.fixedElements}setFixedElements(t){this.fixedElements=t}getHashCodeV2(){const t=this.getHashCodeV3__();return this.hashString(t)}getHashCodeV3__(){return Array.from({length:16},(t,e)=>{let s;const a=this.state[e];return a===-1?s="*":this.goals.includes(a)?s=String(a):this.goals.includes(e+1)?s="o":s=" ",s=s+"	",e!==0&&(e+1)%4===0&&(s=s+`
`),s}).join("")}getHashCode(){const t=this.state.map(String).join(",");return this.hashString(t)}hashString(t){let e=0;for(let s=0;s<t.length;s++){const a=t.charCodeAt(s);e=(e<<5)-e+a,e|=0}return e}equals(t){return this.getHashCode()===t.getHashCode()}hashCode(){return this.getHashCode()}}class K{constructor(t,e,s=0,a=!1){u(this,"state"),u(this,"action"),u(this,"reward"),u(this,"isTerminal"),this.state=t,this.action=e,this.reward=s,this.isTerminal=a}}const O=class m{constructor(t){u(this,"state"),u(this,"goals"),u(this,"reverseAction",null),u(this,"bigCircleAction1",[]),u(this,"bigCircleAction2",[]),u(this,"smallCircleAction1",[]),u(this,"smallCircleAction2",[]),u(this,"circleAction",[]),m.stateProducer=t,m.stateProducer.resetState();const e=m.stateProducer.getState();this.goals=m.stateProducer.getGoals(),this.state=new A(e,m.stateProducer)}static isTerminalSuccess(t){return m._isTerminalSuccess(t.getState(),t.getGoals())}reset(){this.reverseAction=null,this.circleAction=[],this.bigCircleAction1=[],this.bigCircleAction2=[],this.smallCircleAction1=[],this.smallCircleAction2=[],this.bigCircleAction1.push(o.L,o.L,o.D,o.D,o.R,o.R,o.U,o.U),this.bigCircleAction2.push(o.R,o.R,o.D,o.D,o.L,o.L,o.U,o.U),this.smallCircleAction1.push(o.L,o.D,o.R,o.U,o.L),this.smallCircleAction2.push(o.R,o.D,o.L,o.U,o.R)}getInitState(){m.stateProducer.resetState();const t=m.stateProducer.getState();return this.goals=m.stateProducer.getGoals(),this.state=new A(t,m.stateProducer),this.state}static getPossibleActions(t){const e=t.getState().indexOf(-1),s=t.getFixedElements().map(a=>a-1);return g.getValidMoves(e,s)}executeAction(t,e){const s=g.makeMove(t.getState(),e),a=new A(s,m.stateProducer);let n=m._isTerminalSuccess(s,this.goals);this.state=new A(s,m.stateProducer);let r=NaN;this.reverseAction=g.getReverseAction(e),this.circleAction.push(e),this.circleAction.length>8&&this.circleAction.shift(),(c.equalArrays(this.circleAction,this.bigCircleAction1)||c.equalArrays(this.circleAction,this.bigCircleAction2)||c.equalArrays(this.circleAction,this.smallCircleAction1)||c.equalArrays(this.circleAction,this.smallCircleAction2))&&(n=!0);const l=this.state.getState().indexOf(-1);return m.stateProducer.isLockedIndex(l)&&(n=!0,r=-1),isNaN(r)&&(r=this.getReward(s,this.goals)),new K(a,e,r,n)}static _isTerminalSuccess(t,e){if(t.length!==16)throw new Error("newState.size() != 16");return e.filter(s=>t[s-1]===s).length===e.length}prntInfo(){c.prnt(`

================================================
`);const t=this.state.getState(),e=t.indexOf(-1),s=g.getXY(e);c.prnt(s);const a=g.getIndex(s.getKey(),s.getValue());c.prnt(`${e} - ${a}`);const n=g._getValidMoves(e);c.prnt(n);const r=this.getReward(t,this.goals);c.prnt(r);const l=g.stateAsString(t,this.goals);c.prnt(l)}getReward(t,e){const s=t.indexOf(-1),a=g.getXY(s),n=e.map(l=>this.getDistance(g.getXY(t.indexOf(l)),g.getXY(l-1))).reduce((l,d)=>l+d,0);if(n===0)return 100.5;const r=e.reduce((l,d)=>l+this.getDistance(g.getXY(t.indexOf(d)),a),0);return c.prnt(`d0Sum: ${n}`),c.prnt(`d1Sum: ${r}`),1/(n+r)}getDistance(t,e){const s=Math.pow(e.getKey()-t.getKey(),2),a=Math.pow(e.getValue()-t.getValue(),2);return Math.sqrt(s+a)}};u(O,"stateProducer");let V=O;class P{constructor(t,e,s,a,n){u(this,"state"),u(this,"action"),u(this,"reward"),u(this,"done"),u(this,"newState"),this.state=new A(t),this.action=e,this.reward=s,this.done=a,this.newState=new A(n)}getState(){return this.state}getAction(){return this.action}getReward(){return this.reward}isDone(){return this.done}getNewState(){return this.newState}equals(t){return t instanceof P?this.hashCode()===t.hashCode():!1}hashCode(){return this.state.getHashCodeV2()^this.newState.getHashCodeV2()}}class U{constructor(t){u(this,"state"),u(this,"qValues"),this.state=t,this.qValues=new Map}setValue(t,e){const s=V.getPossibleActions(this.state);if(this.qValues.size===0&&s.forEach(a=>this.qValues.set(a,0)),!s.includes(t)){v.warn("WARNING: !moves.includes(action)");return}this.qValues.set(t,e)}getValue(t){return this.qValues.get(t)||0}getActionWithMaxValue(t){const e=V.getPossibleActions(this.state).filter(a=>a!==t);return(t===null?null:this.getAction(t))??(v.warn("WARNING: no action found"),e.length>0?e[0]:o.D)}getAction(t){const e=Array.from(this.qValues.entries()).filter(([s])=>s!==t).reduce((s,a)=>a[1]>s[1]?a:s,[t,-1/0]);return e[1]>-1/0?e[0]:void 0}getMaxValue(){return this.qValues.size===0?0:Math.max(...Array.from(this.qValues.values()))}}class N{static updateQTable(t,e,s,a,n,r,l,d){let p;if(r)p=n;else{const S=this.getQValue(t,e,s),T=this.getMaxQValue(t,a);p=this.calcQValue(n,S,T,d,l)}this.addStateWithZeroValuesToQTableIfStateNotExist(t,e),this.updateQTableEntry(t,e.getHashCodeV2(),s,p)}static updateQTableEntry(t,e,s,a){var n;(n=t.get(e))==null||n.setValue(s,a)}static getMaxQValue(t,e){var s;const a=e.getHashCodeV2();return this.addStateWithZeroValuesToQTableIfStateNotExist(t,e),((s=t.get(a))==null?void 0:s.getMaxValue())??0}static getQValue(t,e,s){var a;const n=e.getHashCodeV2();return this.addStateWithZeroValuesToQTableIfStateNotExist(t,e),((a=t.get(n))==null?void 0:a.getValue(s))??0}static addStateWithZeroValuesToQTableIfStateNotExist(t,e){t.has(e.getHashCodeV2())||this.addStateWithZeroValuesToQTable(t,e)}static addStateWithZeroValuesToQTable(t,e){const s=e.getHashCodeV2(),a=new U(e);t.set(s,a)}static calcQValue(t,e,s,a,n){return e+n*(t+a*s-e)}}const I=class E{static async runEpisode(t,e,s,a,n){const r=new Y,l=new V(t);l.reset();let d=l.getInitState();l.prntInfo();const p=.5;let S=!1,T=0;for(;!S&&T<50;){T++;let f;const y=V.getPossibleActions(d);if(l.reverseAction!==null){const G=y.indexOf(l.reverseAction);y.splice(G,1)}r.nextDouble()<p?(c.prnt(`
rndm move`),f=H.getRandomAction(y)):(c.prnt(`
qTable move`),f=H.getAction(e,d,l.reverseAction),y.includes(f)||(f=H.getAction(e,d,l.reverseAction))),c.prnt(`
--------------------------------------------------------`),c.prnt(`
action: `+f),y.includes(f);const x=l.executeAction(d,f),L=x.state;l.prntInfo();const Q=x.reward;S=x.isTerminal,S&&(S=!0);const X=new P(d,f,Q,S,L);E.experience.add(X),d=x.state}E.replayExperience(E.experience,e,a,s,1e3);const C=Array.from(e.values()).reduce((f,y)=>f+y.qValues.size,0),D=`Episode ${n} done, states count: ${C}, experience size: ${E.experience.size}`;c.prnt(D),c.prnt(""),await c.sleep(1e3),v.clearScreen()}static replayExperience(t,e,s,a,n){Array.from(t).sort(()=>Math.random()-.5).slice(0,n).forEach(r=>{N.updateQTable(e,r.getState(),r.getAction(),r.getNewState(),r.getReward(),r.isDone(),s,a)})}};u(I,"experience",new Set);let B=I;class Y{nextDouble(){return Math.random()}}class Z{static async train(t,e){const s=b.generateLessons(),a=async(r,l)=>{await B.runEpisode(r,t,.9,.1,l)},n=async r=>{for(let l=0;l<r.getEpisodesToTrain();l++)await a(r,l)};for(let r=0;r<e;r++)await Promise.all(s.map(n));c.prnt("training done")}}class H{static async train(){const t=this.loadQTable("qTable.ser");await Z.train(t,10)}static async test(){const t=this.loadQTable("qTable.ser");for(;;)await this.testQTable(t)}static loadQTable(t){let e=new Map;try{c.prnt(t),c.prnt("qTable not loaded .. newwd to implement .. use some local storage ")}catch(a){c.prnt(a)}const s=this.getStatistics(e);return c.prnt(s),e}static getStatistics(t){const e=Array.from(t.values()).flatMap(l=>Array.from(l.qValues.values())),s=e.reduce((l,d)=>l+d,0),a=e.length,n=a?s/a:0,r=new j;return r.count=a,r.sum=s,r.average=n,r}static async testQTable(t){c.prnt("********************* test q table **********************"),c.prnt("********************* test q table **********************"),c.prnt("********************* test q table **********************");let e=0;const s=b.generateLessons(),a=s.length;let n=s[e],r=w.shuffle(b.stateDone,[],1e3),l=new A(r,n),d=n.getGoals();this.prntState(l);let p=!1,S=0,T=null;for(;!p&&S<200;){await c.sleep(1e3/2),v.clearScreen(),S++;const D=l.getHashCodeV2();N.addStateWithZeroValuesToQTableIfStateNotExist(t,l);const f=t.get(D),y=f?f.getActionWithMaxValue(T):o.D;T=g.getReverseAction(y);const x=g.makeMove(l.getState(),y),L=V._isTerminalSuccess(x,d);l=new A(x,n),p=c.equalArrays(l.getState(),b.stateDone),c.prnt(`${S}
----
`),this.prntState(l),L&&!p&&e<a-1&&(e++,n=s[e],d=n.getGoals(),c.prnt(`lesson change: ${e}`),c.prnt(d),l=new A(l.getState(),n))}const C=V.isTerminalSuccess(l);c.prnt(`success: ${C}`),await c.sleep(3e3)}static prntState(t){const e=g.stateAsString(t.getState(),t.getGoals());c.prnt(e)}static getAction(t,e,s){var a;const n=e.getHashCodeV2();let r=V.getPossibleActions(e);return r=r.filter(l=>l!==s),t.has(n)?((a=t.get(n))==null?void 0:a.getActionWithMaxValue(s))||o.D:this.getRandomAction(r)}static getRandomAction(t){return t.length>0?t[Math.floor(Math.random()*t.length)]:o.D}}class j{constructor(){u(this,"count",0),u(this,"sum",0),u(this,"average",0)}}class z{static async main(){c.prnt("tarining starts in:");for(let t=0;t<3;t++)c.prnt(t),await c.sleep(500);c.prnt("tarining .. "),await c.sleep(1e3),await H.train(),await c.sleep(1e3),c.prnt("testing .. "),await c.sleep(1e3),await H.test()}}z.main().then(()=>{console.log("G15EntryPoint has completed execution.")}).catch(h=>{console.error("An error occurred:",h)});
